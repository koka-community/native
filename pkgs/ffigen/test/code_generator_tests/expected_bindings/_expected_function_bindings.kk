// Copyright (c) 2024, the Koka-Community. 
// 
// All rights reserved. Use of this source code is governed by a
// MIT-style license that can be found in the LICENSE file.
// Ffigen is adapted from dart's ffigen which is under a BSD Style License in the LICENSE file.

// AUTO GENERATED FILE, DO NOT EDIT.
// 
// Generated by `ffigen`.

module bindings

import std/cextern as ffi

extern import
  c file "test"

// Just a test function
// heres another line
pub extern external/noParam(): int32
  c "noParam"

pub fun wrapper/noParam(): int
  external/noParam().int

pub extern external/withPrimitiveParam(a: int32, b: int8): int8
  c "withPrimitiveParam"

pub fun wrapper/withPrimitiveParam(a: int, b: int): int
  external/withPrimitiveParam(a.int32, b.int8).int

pub extern external/withPointerParam(a: ffi.owned-c<int32>, b: ffi.owned-c<ffi.owned-c<int8>>): ffi.owned-c<float64>
  c "withPointerParam"

// A function with isLeaf: true
pub extern external/leafFunc(a: int32): int32
  c "leafFunc"

pub fun wrapper/leafFunc(a: int): int
  external/leafFunc(a.int32).int

